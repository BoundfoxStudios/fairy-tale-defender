# Reusable workflow for building the community project

name: Unity Build & Test Reusable Workflow

on: 
  workflow_call:
    inputs:
      project-path:
        required: false
        description: Path that points to the Unity project
        default: FairyTaleDefender
        type: string
      custom-parameters:
        required: false
        default: ''
        description: Additional parameters to pass to Unity for building
        type: string
      do-test:
        required: false
        description: Whether to execute tests or not, defaults to false
        default: false
        type: boolean
      fail-fast:
        required: false
        description: Whether to fail fast in the matrix build strategy, defaults to false
        default: false
        type: boolean
      max-parallel:
        required: false
        description: Maximum amount of parallel matrix build strategy runners, defaults to 10
        default: 10
        type: number
      do-upload-game-binaries:
        required: false
        description: Set to true when generated game binaries should be uploaded to GitHub
        default: false
        type: boolean
      do-upload-debug-symbols:
        required: false
        description: Set to true when generated debug symbols should be uploaded to GitHub
        default: false
        type: boolean
      ref:  
        required: true
        description: the git ref to checkout
        type: string
    outputs:
      build-version:
        description: The game's version
        value: ${{ jobs.build.outputs.build-version }}
    secrets:
      UNITY_EMAIL: 
        required: true
      UNITY_PASSWORD:
        required: true
      UNITY_SERIAL: 
        required: false
        description: Set the serial to use a professional license for building
      UNITY_LICENSE:
        required: false
        description: Set the license to use a personal license for building
  
jobs: 
  test:
    name: Test for ${{ matrix.target-platform }}
    runs-on: ${{ matrix.os }}
    if: inputs.do-test
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/unity-cache
        with:
          project-path: ${{ inputs.project-path }}
          unity-version: ${{ matrix.unity-version }}
          target-platform: ${{ matrix.target-platform }}
      - uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }} 
        with:
          projectPath: ${{ inputs.project-path }}
          unityVersion: ${{ matrix.unity-version }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: ${{ inputs.fail-fast }}
      max-parallel: ${{ inputs.max-parallel }}
      matrix:
        unity-version:
          - 2022.2.14f1
        os:
          - ubuntu-latest
          # Game CI does not support MacOS yet for executing the tests
          # Regarding Windows see: https://github.com/BoundfoxStudios/fairy-tale-defender/issues/20
        include:
          - os: ubuntu-latest
            target-platform: StandaloneLinux64

  manifest:
    name: Generate build manifest json
    runs-on: ubuntu-latest
    outputs:
      content: ${{ steps.manifest.outputs.content }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/build-manifest
        id: manifest
      
  contributors:
    name: Generate contributors json
    runs-on: ubuntu-latest
    outputs:
      content: ${{ steps.contributors.outputs.content }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/contributors
        id: contributors
        with: 
          github-token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ inputs.ref }}
        
  build:
    name: Build for ${{ matrix.target-platform }}
    runs-on: ${{ matrix.os }}
    needs: [manifest, contributors]
    outputs:
      build-version: ${{ steps.unity-build.outputs.buildVersion }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/unity-cache
        with:
          project-path: ${{ inputs.project-path }}
          unity-version: ${{ matrix.unity-version }}
          target-platform: ${{ matrix.target-platform }}
      - name: write manifest.json
        if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
        uses: DamianReeves/write-file-action@v1.2
        with:
         path: ${{ inputs.project-path }}/Assets/_Game/Build/manifest.json
         write-mode: overwrite
         contents: ${{ needs.manifest.outputs.content }}
      - name: write contributors.json
        if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
        uses: DamianReeves/write-file-action@v1.2
        with:
         path: ${{ inputs.project-path }}/Assets/_Game/Build/contributors.json
         write-mode: overwrite
         contents: ${{ needs.contributors.outputs.content }}
      - name: Commit manifest & contributors changes
        if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
        uses: EndBug/add-and-commit@v9
        with:
          push: false
      - id: unity-build
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ inputs.project-path }}
          unityVersion: ${{ matrix.unity-version }}
          targetPlatform: ${{ matrix.target-platform }}
          versioning: Semantic
          buildName: FairyTaleDefender
          customParameters: ${{ inputs.custom-parameters }}
      - uses: actions/upload-artifact@v3
        name: Upload Game Binaries
        if: inputs.do-upload-game-binaries
        with:
          name: Build-${{ github.run_id }}-${{ matrix.target-platform }}
          path: | 
            build/${{ matrix.target-platform }}
            !build/${{ matrix.target-platform }}/*ButDontShipItWithYourGame
            !build/${{ matrix.target-platform }}/*DoNotShip
          if-no-files-found: error
      - uses: actions/upload-artifact@v3
        name: Upload Debug Symbols
        if: inputs.do-upload-debug-symbols
        with:
          name: Build-${{ github.run_id }}-${{ matrix.target-platform }}-Debug-Symbols
          path: |
            build/${{ matrix.target-platform }}/*ButDontShipItWithYourGame
            build/${{ matrix.target-platform }}/*DoNotShip
          if-no-files-found: error
    strategy:
      fail-fast: ${{ inputs.fail-fast }}
      max-parallel: ${{ inputs.max-parallel }}
      matrix:
        unity-version:
          - 2022.2.14f1
        os:
          - windows-2019
          - macos-12
          - ubuntu-latest
        include:
          - os: windows-2019
            target-platform: StandaloneWindows64
          - os: macos-12
            target-platform: StandaloneOSX
          - os: ubuntu-latest
            target-platform: StandaloneLinux64
    